#include "SeqList.h"

void TestSeqList1()
{
	SL sl;
	SeqListInit(&sl);
	SeqListPushBack(&sl,1);
	SeqListPushBack(&sl,2);
	SeqListPushBack(&sl,3);
	SeqListPushBack(&sl,4);
	SeqListPushBack(&sl,5);
	SeqListPrint(&sl);
}
int main()
{
	TestSeqList1();
	return 0;
}
//#define N 100
#include <stdio.h>
#include <stdlib.h>

typedef int SLDataType;
typedef struct SeqList
{
	SLDataType *a;
	int size;	//存储的有效数据
	int capacity; //数组实际能存数据的空间容量是多大 
}SL;
//接口函数 
void SeqListPrint(SL*ps);
void SeqListInit(SL* ps);
void SeqListPushBack(SL* ps,SLDataType x);
void SeqListPopBack(SL* ps);
void SeqListPushFront(SL* ps,SLDataType x);
#include "SeqList.h"
void SeqListInit(SL* ps)
{
	ps->a=NULL;
	ps->size=ps->capacity=0;
}
void SeqListPushBack(SL* ps,SLDataType x)
{
	if(ps->size==ps->capacity)
	{
		int newcapacity=ps->capacity==0?4:ps->capacity*2;
		SLDataType* temp=(SLDataType*)realloc(ps->a,newcapacity*sizeof(SLDataType));
		if(temp==NULL)
		{
			printf("realloc fail\n");
			exit(-1);
		}
		ps->a=temp;
		ps->capacity=newcapacity;
	}
	ps->a[ps->size]=x;
	ps->size++;
}
void SeqListPrint(SL*ps)
{
	int i;
	for(i=0;i<ps->size;++i)
	{
		printf("%d ",ps->a[i]);
	}
	printf("\n");
}
void SeqListPopBack(SL* ps);
void SeqListPushFront(SL* ps,SLDataType x);

