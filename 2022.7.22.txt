#include <stdio.h>
#define ROW 9
#define COL 9
#define ROWS ROW+2
#define COLS COL+2
#define EASY_COUNT 10
#include <stdlib.h>
#include <time.h>
void test();
void menu();
void game();
void intiboard(char board[ROWS][COLS],int rows,int cols,char set);
void displayboard(char board[ROWS][COLS],int row,int col);
void setmine(char board[ROWS][COLS],int row,int col);
void findmine(char mine[ROWS][COLS],char show[ROWS][COLS],int row,int col);
int get_mine_count(char mine[ROWS][COLS],int x,int y);
int main()
{
	int input;
	test();
	return 0;
}

void test()
{
	int input;
	srand((unsigned int)time(NULL));
	do
	{
		menu();
		printf("请输入:>\n"); 
		scanf("%d",&input);
		switch(input)
		{
			case 1:
				game();
				break;
			case 0:
				printf("退出游戏!\n");
				break;
			default:
				printf("输入错误，重新输入!\n");
				break;
		}
	}while(input);
}

void menu()
{
	printf("************************\n");
	printf("**** 1.play  0.exit ****\n");
	printf("************************\n");
}

void game()
{
	char mine[ROWS][COLS];
	char show[ROWS][COLS];
	intiboard(mine,ROWS,COLS,'0');
	intiboard(show,ROWS,COLS,'*');
	//displayboard(mine,ROW,COL);
	displayboard(show,ROW,COL);
	setmine(mine,ROW,COL);
	findmine(mine,show,ROW,COL);
}

void intiboard(char board[ROWS][COLS],int rows,int cols,char set)
{
	int i,j;
	for(i=0;i<rows;i++)
	{
		for(j=0;j<cols;j++)
		{
			board[i][j]=set;
		}
	}
}

void displayboard(char board[ROWS][COLS],int row,int col)
{
	int i,j;
	for(i=0;i<=row;i++)
	{
		printf("%d ",i);
	}
	printf("\n");
	for(i=1;i<=row;i++)
	{
		printf("%d ",i);
		for(j=1;j<=col;j++)
		{
			printf("%c ",board[i][j]);
		}
		printf("\n");
	}
}

void setmine(char board[ROWS][COLS],int row,int col)
{
	int count=EASY_COUNT;
	while(count)
	{
		int x=rand()%row+1;
		int y=rand()%col+1;
		if(board[x][y]=='0')
		{
			board[x][y]='1';
			count--;
		}
	}
}

void findmine(char mine[ROWS][COLS],char show[ROWS][COLS],int row,int col)
{
	int x,y;
	int win;
	while(win<row*col-EASY_COUNT)
	{
		printf("请输入坐标:>\n");
		scanf("%d%d",&x,&y);
		if(x>=1&&x<=row&&y>=1&&y<=col)
		{
			if(mine[x][y]=='1')
			{
				printf("炸死了。\n");
				displayboard(mine,ROW,COL);
				break;
			}
			else
			{
				int count=get_mine_count(mine,x,y);
				show[x][y]=count+'0';
				displayboard(show,ROW,COL);
				win++;
			}
		}
		else
		{
			printf("输入错误:请重新输入!\n");
		}
	}
	if(win==row*col-EASY_COUNT)
	{
		printf("恭喜你,扫雷完成!\n");
		displayboard(mine,ROW,COL);
	}
}

int get_mine_count(char mine[ROWS][COLS],int x,int y)
{
	return mine[x-1][y-1]+
	mine[x-1][y]+
	mine[x-1][y+1]+
	mine[x][y-1]+
	mine[x][y+1]+
	mine[x+1][y-1]+
	mine[x+1][y]+
	mine[x+1][y+1]-8*'0';
}