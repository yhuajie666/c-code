#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#define ROW 3
#define COL 3
void test();
void menu();
void game();
void init_board(char board[ROW][COL],int row,int col);
void display_board(char board[ROW][COL],int row,int col);
void playermove(char board[ROW][COL],int row,int col);
void computermove(char board[ROW][COL],int row,int col);
char iswin(char board[ROW][COL],int row,int col);
int isfull(char board[ROW][COL],int row,int col);
int main()
{
	test();
	return 0;
}

void test()
{
	int input;
	srand((unsigned int)time(NULL));
	do
	{
		menu();
		printf("请输入:>\n");
		scanf("%d",&input);
		switch(input)
		{
			case 1:
				game();
				break;
			case 0:
				printf("退出游戏\n");
			default:
				printf("输入错误\n");
				break; 
			
		}
	}while(input);
}

void menu()
{
	printf("**********************\n");
	printf("**** 1.play 0.exit****\n");
	printf("**********************\n");
}

void game()
{
	char ret;
	char board[ROW][COL];
	init_board(board,ROW,COL);
	display_board(board,ROW,COL);
	while(1)
	{
		playermove(board,ROW,COL);
		display_board(board,ROW,COL);
		ret=iswin(board,ROW,COL);
		if(ret!='C')
		{
			break;
		}
		computermove(board,ROW,COL);
		display_board(board,ROW,COL);
		iswin(board,ROW,COL);
		if(ret!='C')
		{
			break;
		}
	}
	if(ret=='*')
	{
		printf("玩家赢。\n");
	}
	else if(ret=='#')
	{
		printf("电脑赢。\n");
	}
	else
		printf("平局。\n");
}

void init_board(char board[ROW][COL],int row,int col)  //棋盘初始化 
{
	int i,j;
	for(i=0;i<row;i++)
	{
		for(j=0;j<col;j++)
		{
			board[i][j]=' ';
		}
	}
}

void display_board(char board[ROW][COL],int row,int col)   //打印棋盘
{
	int i=0;
	for(i=0;i<row;i++)
	{
		int j=0;
		for(j=0;j<col;j++)
		{
			printf(" %c ",board[i][j]);
			if(j<col-1)
			{
				printf("|");
			}
		}
		printf("\n");
		if(i<row-1)
		{
			for(j=0;j<col;j++)
			{
				printf("---");
				if(j<col-1)
				{
					printf("|");
				}
			}
			printf("\n");
		}	
	}
}

void playermove(char board[ROW][COL],int row,int col)   //玩家走
{
	int x,y;
	printf("玩家走:>\n");
	while(1)
	{
		printf("请输入坐标:>");
		scanf("%d%d",&x,&y);
		if(x>=1&&x<=row&&y>=1&&y<=col)
		{
			if(board[x-1][y-1]==' ')
			{
				board[x-1][y-1]='*';
				break; 
			}
			else
			{
				printf("该坐标被占用\n");
			}
		}
		else
		{
			printf("输入错误，重新输入！\n");
		}
	}
}

void computermove(char board[ROW][COL],int row,int col)
{
	int x,y;
	printf("电脑走:>\n");
	while(1)
	{
		x=rand()%row;
		y=rand()%col;
		if(board[x][y]==' ')
		{
			board[x][y]='#';
			break;
		}
	}
}

char iswin(char board[ROW][COL],int row,int col)  //判断输赢
{
	int i;
	for(i=0;i<row;i++)
	{
		if(board[i][0]==board[i][1]&&board[i][1]==board[i][2]&&board[i][1]!=' ')
		{
			return board[i][1];
		}
	}
	for(i=0;i<col;i++)
	{
		if(board[0][i]==board[1][i]&&board[1][i]==board[2][i]&&board[1][i]!=' ')
		{
			return board[1][i];
		}
	}
	if(board[0][0]==board[1][1]&&board[1][1]==board[2][2]&&board[1][1]!=' ')
	{
		return board[1][1];
	}
	if(board[0][2]==board[1][1]&&board[1][1]==board[2][0]&&board[0][2]!=' ')
	{
		return board[0][2];
	}
	if(1==isfull(board,ROW,COL))
	{
		return 'Q';
	}
	return 'C';
}

int isfull(char board[ROW][COL],int row,int col)
{
	int i,j;
	for(i=0;i<row;i++)
	{
		for(j=0;j<col;j++)
		{
			if(board[i][j]==' ')
			{
				return 0;
			}
		}
	}
	return 1;
}